version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - sudo apt-get update
      - sudo apt-get install -y git
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Jar File...
      - mvn clean install
      - echo Building the Docker Image
      - IMAGE_TAG = $(git rev-parse HEAD)
      - docker build -t $IMAGE_REPO_NAME:latest .
      - docker tag $IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$I MAGE_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - DOCKER_CONTAINER_NAME=java-aws-ecs-backend
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imageDefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imageDefinitions.json
      - cat imageDefinitions.json
      - echo target/$DOCKER_CONTAINER_NAME.jar
artifacts:
  files:
    - imageDefinitions.json
    - target/$DOCKER_CONTAINER_NAME.jar